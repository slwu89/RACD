// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// RACD_Simulation
void RACD_Simulation(const int tMax, const Rcpp::NumericVector& theta, const Rcpp::List& human, const Rcpp::List& house, const uint_least32_t seed, const std::string& out_trans);
RcppExport SEXP _RACD_RACD_Simulation(SEXP tMaxSEXP, SEXP thetaSEXP, SEXP humanSEXP, SEXP houseSEXP, SEXP seedSEXP, SEXP out_transSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type tMax(tMaxSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type human(humanSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type house(houseSEXP);
    Rcpp::traits::input_parameter< const uint_least32_t >::type seed(seedSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type out_trans(out_transSEXP);
    RACD_Simulation(tMax, theta, human, house, seed, out_trans);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_RACD_RACD_Simulation", (DL_FUNC) &_RACD_RACD_Simulation, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_RACD(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
